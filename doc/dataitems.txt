# errorcodes.txt
#
# Created on: May 12, 2009
# Authors: dh
# 
# $LastChangedBy: haage $
# $LastChangedDate: 2009-06-17 12:01:33 +0200 (Wed, 17 Jun 2009) $
# $Revision: 1365 $
# 
# (C) 2008-2009 by Computer Networks and Internet, University of Tuebingen
# 
# This file is part of UNISONO Unified Information Service for Overlay 
# Network Optimization.
# 
# UNISONO is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
# 
# UNISONO is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with UNISONO.  If not, see <http://www.gnu.org/licenses/>.

# each M&M in UNISONO provides a number of data items it can measure, monitor or
# gather in some way. New data items must be specified here.
#
# name is the global name for a specified data item
# type defines its type, can be: 
#      (n)ode      for node specific data items (doesn't need an identifier)
#      (i)nterface for network interface specific data items (needs an
#                  identifier to identify the correspondent interface)
#      (l)ink      for link properties, whereby a link is the end-to-end
#                  connection between to nodes (therefore, it requires 2
#                  identifiers)
#
# results are currently returned as string in the "result" field or as the
# type in "<dataitem name>":
#      (f)loat     for floatingpoint values
#      (i)nteger   for integer values (might be 64bit integer)
#      (s)tring    for string values such as network names, cpu types etc.

# name					type	result	impl	explanation
# Data items for link properties (2 identifier)
# bandwidth
AVAILABLE_BANDWIDTH		l		i				available Bandwidth from NodeID2 -> NodeID1 in bit/s
ADR 					l		i				guessed value: upper bound for availBW, lower bound for capacity in bit/s
CAPACITY				l		i				capacity of the Link between NodeID2 -> NodeID1 in bit/s

# round trip time
RTT						l		i		*		average round trip time NodeID1 -> NodeID2 -> NodeID1 in usec
RTT_MIN					l		i		*		min -
RTT_MAX					l		i		*		max -
RTT_DEVIATION			l		i		*		standard deviation -
RTT_JITTER				l		i		*		rtt jitter

# one way delay
OWD						l		i		*		average one way delay NodeID1 -> NodeID2 in usec
OWD_MIN					l		i		*		min -
OWD_MAX					l		i		*		max -
OWD_DEVIATION			l		i		*		standard deviation -
OWD_JITTER				l		i		*		owd jitter

PATHMTU					l		i		*		minimal MTU between NodeID1 und NodeID2 in byte
HOPCOUNT				l		i		*		number of hops between NodeID1 und NodeID2
LOSS					l		i		*		end-to-end loss estimation in %
# QoS
QOS_E2E					l		s				end2end QoS: 0 = N/A, 1 = diffserv, 2 = intserv, 4 = NSIS, and sums

# Multicast
IP_MULTICAST_SUPPORT	l		i				IP multicast support: 0 = false, 1 = true

# Data items for interface properties (1 identifier)
# generic
INTERFACE_TYPE			i		s		*	type of network interface
INTERFACE_CAPACITY_RX	i		i		*	max receive capacity of the interface in bit/s
INTERFACE_CAPACITY_TX	i		i		*	max send capacity of the interface in bit/s
INTERFACE_MAC			i		s		*	MAC address of the interface in bit/s
INTERFACE_MTU			i		i		*	MTU of the interface in bytes

USED_BANDWIDTH_RX		i		i		*	current in use RX bandwidth in bit/s
USED_BANDWIDTH_TX		i		i		*	current in use TX bandwidth in bit/s

# wireless
WLAN_ESSID				i		s		*	essid of the current wlan connection
WLAN_MODE				i		s		*	mode of the wireless network
WLAN_AP_MAC				i		s		*	MAC address of the access point (in int64_t)
WLAN_LINK				i		i		*	WLAN link quality
WLAN_SIGNAL						i		*	WLAN signal level
WLAN_NOISE						i		*	WLAN noise level
WLAN_SIGNOISE_RATIO				i		*	WLAN signal to noise ratio
WLAN_CHANNEL			i		i		*	WLAN channel
WLAN_FREQUENCY			i		i		*	WLAN frequency

# umts

# bluetooth

# Data items for node properties (no identifier)
SHARED_BANDWIDTH_RX		n		i		*	shared RX bandwidth of local interface in bit/s
SHARED_BANDWIDTH_TX		n		i		*	shared TX bandwidth of local interface in bit/s

CPU_TYPE				n		i		*	CPU model
CPU_SPEED				n		i		*	Speed in MHz
CPU_CACHE_SIZE			n		i		*	Size of the cache in KB
CPU_CORE_COUNT			n		i		*	number of CPU cores
CPU_LOAD				n		i		*	current cpu usage in %
CPU_LOAD_SYS			n		i		*	current sys cpu usage in %
CPU_LOAD_USER			n		i		*	current user(+nice) cpu usage in %
CPU_LOAD_WIO			n		i		*	current waiting io cpu usage in %
CPU_LOAD_IDLE			n		i		*	current idle cpu usage in %
SYTEM_LOAD_AVG_NOW		n		i		*	current sytem load (last minute)
SYSTEM_LOAD_AVG_5MIN	n		i		*	system load during the last 5 minutes
SYSTEM_LOAD_AVG_15MIN	n		i		*	system load during the last 5 minutes
HOST_UPTIME				n		i		*	uptime of the host in seconds
HOST_UPTIME_IDLE		n		i		*	time the host was idle since boot in seconds
RAM						n		i		*	sytem memory in KB
RAM_USED				n		i		*	currently used memory in KB
RAM_FREE				n		i		*	currently available memory in KB
SWAP					n		i		*	system swap in KB
SWAP_USED				n		i		*	currently used swap in KB
SWAP_FREE				n		i		*	currently available swap in KB
PERSISTENT_MEMORY		n		i		*	persistent memory for /tmp in KB
PERSISTENT_MEMORY_USED	n		i		*	currently used persistent memory in KB
PERSISTENT_MEMORY_FREE	n		i		*	currently available persistent memory in KB
