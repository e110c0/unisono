'''
event.py

 Created on: May 6, 2009
 Authors: dh
 
 $LastChangedBy$
 $LastChangedDate$
 $Revision$
 
 (C) 2008-2009 by Computer Networks and Internet, University of Tuebingen
 
 This file is part of UNISONO Unified Information Service for Overlay 
 Network Optimization.
 
 UNISONO is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 2 of the License, or
 (at your option) any later version.
 
 UNISONO is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with UNISONO.  If not, see <http://www.gnu.org/licenses/>.
 
'''

class Event:
    # FIXME: DISCARD should probably be named DELIVER_ERROR, and it doesn't really need to exist at all
    # TODO: If this ever crosses process boundaries, make it a NamedTuple
    '''
    Generic event class for unisono
    
    current event types are:
      Dispatcher:
    CACHE    cache a remote result
    CANCEL   cancel an order
    ORDER    place an order
    RESULT   return a result (from M&Ms)
    SCHED    order generated by scheduler
      ReplyHandler:
    DELIVER  deliver a result back to the connector
    DISCARD  deliver error if unable to handle order
      ???:
    RECEIVE  receive a remote packet
    SEND     send a packet to a remote node
    '''
    def __init__(self, type, payload):
        '''
        Constructor
        '''
        self.type = type
        self.payload = payload
